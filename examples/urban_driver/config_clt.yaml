# Config format schema number
format_version: 7

###################
## Model options
model_params:
  history_num_frames_ego: 1  # this will also create raster history (we need to remove the raster from train/eval dataset - only visualization)
  history_num_frames: 0
  history_num_frames_agents: 3
  step_time: 0.1
  disable_other_agents: False
  disable_map: False
  disable_lane_boundaries: True
  global_head_dropout: 0
  future_num_frames: 12 # total number of loaded frames from data -> for closed-loop: frames to unroll with loss = future_num_frames - warmup_num_frames
  ###################
  ## Closed-loop specific properties
  detach_unroll: True # if to detach between steps when training with unroll
  warmup_num_frames: 0 # "sample" warmup_num_steps by following the model's policy
  discount_factor: 0.8 # discount future timesteps via discount_factor**t

###################
## Data loader options
train_data_loader:
  key: "scenes/train.zarr"
  batch_size: 12
  shuffle: True
  num_workers: 16
  ###################
  ## Only used for open-loop models
  perturb_probability: 0.5

val_data_loader:
  key: "scenes/validate_0.zarr"
  batch_size: 12
  shuffle: False
  num_workers: 16

###################
## Input raster parameters
raster_params:
  # rasterization backend
  render_engine: "OPENCV"
  # raster image size [pixels]
  raster_size:
    - 224
    - 224
  # raster's spatial resolution [meters per pixel]: the size in the real world one pixel corresponds to.
  pixel_size:
    - 0.5
    - 0.5
  # From 0 to 1 per axis, [0.5,0.5] would show the ego centered in the image.
  ego_center:
    - 0.25
    - 0.5
  map_type: "py_semantic"
  # the keys are relative to the dataset environment variable
  satellite_map_key: "aerial_map/aerial_map.png"
  semantic_map_key: "semantic_map/semantic_map.pb"
  dataset_meta_key: "meta.json"

  # e.g. 0.0 include every obstacle, 0.5 show those obstacles with >0.5 probability of being
  # one of the classes we care about (cars, bikes, peds, etc.), >=1.0 filter all other agents.
  filter_agents_threshold: 0.5

  # whether to completely disable traffic light faces in the semantic rasterizer
  # this disable option is not supported in avsw_semantic
  disable_traffic_light_faces: False

  # When set to True, the rasterizer will set the raster origin at bottom left,
  # i.e. vehicles are driving on the right side of the road.
  # With this change, the vertical flipping on the raster used in the visualization code is no longer needed.
  # Set it to False for models trained before v1.1.0-25-g3c517f0 (December 2020).
  # In that case visualisation will be flipped (we've removed the flip there) but the model's input will be correct.
  set_origin_to_bottom: False

###################
## VectorNet Params
data_generation_params:
  # maximum number of other agents to take (if less will be padded)
  other_agents_num: 30
  # maximum distance from AoI for another agent to be picked
  max_agents_distance: 35
  # Parameters defining which and how many lanes to be retrieved
  lane_params:
    # maximum number of lanes to take into account
    # if less they will be padded; if more the closest to AoI are picked
    max_num_lanes: 30
    # max number of points per lane
    max_points_per_lane: 20
    # max number of points per crosswalk
    max_points_per_crosswalk: 20
    # maximum radius around the AoI for which we retrieve
    max_retrieval_distance_m: 35
    # max number of crosswalks
    max_num_crosswalks: 20

###################
## Train params
train_params:
  checkpoint_every_n_steps: 10000
  max_num_steps: 5
  eval_every_n_steps: 10000